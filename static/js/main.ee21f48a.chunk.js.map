{"version":3,"sources":["utils/loginUtils.js","app/common/component/StylePage.js","app/common/component/Header.js","features/login/LoginContainer.js","utils/customFields.js","utils/issueUtils.js","features/reportfeedback/ReportFeedbackContainer.js","features/createissue/CreateIssueContainer.js","utils/screenshotUtils.js","features/createissue/component/ScreenShotEditor.js","features/reportissue/ReportIssueContainer.js","App.js","serviceWorker.js","index.js"],"names":["request","window","require","getProjectData","string","callback","a","Promise","resolve","reject","options","method","url","headers","authorization","json","error","response","body","Error","StylePage","outerBoxPadding","this","props","Container","style","width","justifyContent","padding","subHeading","color","textDecoration","fontSize","fontWeight","Jumbotron","height","marginBottom","Header","Card","CardBody","children","Component","StyledButton","Button","id","onClick","backgroundColor","name","h1","h2","Fragment","AutoLogin","Login","autoLogin","password","setState","convertBtoa","localStorage","setItem","data","projects","length","Object","assign","history","projectList","isAuthorizedUser","handleValidSubmit","event","values","preventDefault","email","console","log","handleInvalidSubmit","errors","state","utf8Bytes","encodeURIComponent","replace","match","p1","String","fromCharCode","btoa","push","onValidSubmit","onInvalidSubmit","className","display","border","aria-hidden","type","placeholder","validate","required","value","errorMessage","pattern","minLength","maxLength","customFields","severity","category","platforms","found_during","rounds","testers","slides","page_no","token","getItem","getProjectComponents","getProjectVersions","getProjectCustomFields","qs","projectKeys","expand","retval","issuetypes","fields","createIssue","projectDetails","summary","desc","issueType","selectedSlide","pageNo","key","components","phase","round","foundDuring","tester","params","issuetype","project","description","version","content","text","map","includes","toString","accept","addAttachment","imageBase64Data","file","dataurl","filename","arr","split","mime","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","dataURLtoFile","formData","contentType","shell","ReportFeedbackContainer","issueDetails","background","openExternal","onBackPage","fs","CreateIssueContainer","isSubmit","ticketID","isShowScreenShotPage","isShowFeedBackPage","onSubmitIssue","img","imgSrc","setScreenShotImage","showSummaryPage","severityArray","slideNos","Input","onChange","e","target","marginRight","disabled","selected","hidden","val","index","marginLeft","textAlign","float","existsSync","unlink","err","class","marginTop","toggleScreenShotPage","cursor","onPageBack","screenshot","remote","ColorPalet","canvasSize","Width","scaleValue","ScreenShotEditor","bounds","cropBounds","x","y","textPosition","windowSize","zoom","textEditor","ev","stage","addEventListener","enableTextEditor","cropImageFunction","alpha","enableCropSection","dragCropArea","setCropImage","stageX","stageY","title","writeTextOnCanvas","createTextField","document","createElement","position","keyCode","top","left","container","current","append","focus","textMessg","Text","addChild","removeChild","removeEventListener","setTimeout","tempWindowSize","cropImage","Bitmap","toDataURL","sourceRect","Rectangle","removeAllChildren","bitmap","getBounds","setBounds","newRect","graphics","clear","beginStroke","drawRect","Shape","drawRectangle","enableRectangle","dragRectangle","removeAllListeners","setStrokeStyle","init","aa","imageSrc","imgSrc2","Stage","scaleX","scaleY","imageContainer1","imageContainer2","bitmap2","React","createRef","outerWidth","outerHeight","activeWindow","BrowserWindow","getFocusedWindow","minimize","all","then","imgArr","imgBuffer","image","Image","src","onload","restore","imageWid","imgBuffer2","image1","catch","message","getScreenShotImage","imageSrc1","imageSrc2","resizeTo","tempCanvasSize","param","getBoundingClientRect","Ticker","update","initialLoad","margin","displayColorPalet","base64Data","writeFile","ref","ReportIssue","resetOptions","projectName","projectPhase","projectRound","projectTester","nextPage","isAttachment","_","find","pt","projectComponent","componentsArr","versionsArr","phasesArr","getDropDownValues","categoryArr","roundsArr","foundDuringArr","testerArr","platformsArr","field","allowedValues","handleProjectChange","handleSubmit","IndicatorSeparator","innerProps","alignSelf","renderMultiSelectDropDown","stateVar","formattedOptions","option","label","closeMenuOnSelect","isMulti","fn","onReset","renderReportPageIntro","imageBase64","setIsAttachment","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee21f48a.chunk.js","sourcesContent":["const request = window.require(\"request\");\nexport const getProjectData = async (string, callback) => {\n  await new Promise((resolve, reject) => {\n    const options = {\n      method: \"GET\",\n      url: \"https://mitrmedia.atlassian.net/rest/api/3/issue/createmeta\",\n      headers: {\n        \"cache-control\": \"no-cache\",\n        authorization: `Basic ${string}`,\n        \"content-type\": \"application/json\"\n      },\n\n      json: true\n    };\n\n    request(options, function(error, response, body) {\n      if (error) throw new Error(error);\n      callback && callback(body);\n      return resolve(body);\n    });\n  });\n};\n","import React, { Component } from \"react\";\n//import { validateLogin } from \"../../gateway/login\";\nimport { Button } from \"reactstrap\";\n\nimport { Container, Jumbotron, Card, CardBody } from \"reactstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass StylePage extends Component {\n  render() {\n    const outerBoxPadding = this.props.outerBoxPadding;\n    return (\n      <Container\n        style={{\n          width: \"335px\",\n          justifyContent: \"center\",\n          padding: outerBoxPadding\n        }}\n      >\n        {this.props.subHeading && (\n          <div>\n            {\" \"}\n            <h4>\n              <u\n                style={{\n                  color: \"black\",\n                  textDecoration: \"unset\",\n                  fontSize: \"22px\",\n                  fontWeight: \"bold\"\n                }}\n              >\n                {this.props.subHeading}\n              </u>\n            </h4>\n          </div>\n        )}\n        <Jumbotron\n          style={{ width: \"98%\", height: \"98%\", marginBottom: \"0px\" }}\n        >\n          {this.props.Header}\n          <Card\n            style={{ color: \"black\", fontWeight: \"normal\", fontSize: \"13px\" }}\n          >\n            <CardBody>{this.props.children}</CardBody>\n          </Card>\n        </Jumbotron>\n      </Container>\n    );\n  }\n}\n\nexport const StyledButton = props => {\n  return (\n    <Button\n      id=\"submit\"\n      onClick={props.onClick}\n      style={{\n        ...props.style,\n        backgroundColor: \"#0062cc\",\n        fontSize: \"12px\"\n      }}\n    >\n      {props.name}\n    </Button>\n  );\n};\n\nexport default StylePage;\n","import React from \"react\";\n\nexport const Header = props => {\n  const { h1, h2 } = props;\n  return (\n    <React.Fragment>\n      {h1 && (\n        <h3>\n          <u\n            style={{\n              color: \"black\",\n              fontWeight: \"bold\",\n              textDecoration: \"unset\",\n              fontSize: \"35px\"\n            }}\n          >\n            {h1}\n          </u>\n        </h3>\n      )}\n      {h2 && (\n        <h4>\n          <u\n            style={{\n              color: \"black\",\n\n              textDecoration: \"unset\",\n              fontSize: \"22px\",\n              fontWeight: \"bold\"\n            }}\n          >\n            {h2}\n          </u>\n        </h4>\n      )}\n    </React.Fragment>\n  );\n};\n","import React, { Component } from \"react\";\n//import { validateLogin } from \"../../gateway/login\";\nimport \"../../App.css\";\nimport { getProjectData } from \"../../utils/loginUtils\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport StylePage, { StyledButton } from \"app/common/component/StylePage\";\nimport { Header } from \"app/common/component/Header\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\nwindow.AutoLogin = () => {};\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: false,\n      isAuthorizedUser: false,\n      name: \"\",\n      password: \"\"\n    };\n    window.AutoLogin = this.autoLogin;\n  }\n  autoLogin = (\n    name = \"mitrqa1@mitrlearning.com\",\n    password = \"UrgDR5P082cMfsva3Ro46C64\"\n  ) => {\n    this.setState(\n      {\n        name: name,\n        password: password\n      },\n      () => {\n        const string = this.convertBtoa();\n        localStorage.setItem(\"AuthorizationToken\", `Basic ${string}`);\n        getProjectData(string, data => {\n          if (data.projects && data.projects.length > 0) {\n            Object.assign(this.props.history, { projectList: data });\n            this.setState({\n              isAuthorizedUser: true\n            });\n          }\n        });\n      }\n    );\n  };\n  handleValidSubmit = (event, values) => {\n    event.preventDefault();\n    this.setState(\n      {\n        name: values.email,\n        password: values.password\n      },\n      () => {\n        const string = this.convertBtoa();\n        localStorage.setItem(\"AuthorizationToken\", `Basic ${string}`);\n        getProjectData(string, data => {\n          if (data.projects && data.projects.length > 0) {\n            Object.assign(this.props.history, { projectList: data });\n            this.setState({\n              isAuthorizedUser: true\n            });\n          }\n        });\n      }\n    );\n    console.log(`Login Successful`, values);\n  };\n\n  handleInvalidSubmit = (event, errors, values) => {\n    this.setState({ email: values.email, error: true });\n    console.log(`Login failed`);\n  };\n\n  convertBtoa = () => {\n    const { name, password } = this.state;\n    console.log(name, \"name\", password, \"password\");\n    const string = `${name}:${password}`;\n\n    const utf8Bytes = encodeURIComponent(string).replace(\n      /%([0-9A-F]{2})/g,\n      function(match, p1) {\n        return String.fromCharCode(\"0x\" + p1);\n      }\n    );\n    return btoa(utf8Bytes);\n  };\n  render() {\n    const { isAuthorizedUser } = this.state;\n\n    isAuthorizedUser && this.props.history.push(\"/ReportIssue\");\n    return (\n      <StylePage\n        Header={<Header h1=\"MITR\" h2=\"JIRA Issue Logger\" />}\n        outerBoxPadding={\"54px 15px\"}\n      >\n        <div\n          style={{\n            justifyContent: \"center\",\n            padding: \"0 22px 0 22px\",\n            width: \"100%\",\n            height: \"100%\"\n          }}\n        >\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n          >\n            <div\n              className=\"form-group\"\n              style={{\n                fontSize: \"12px\",\n                justifyContent: \"center\",\n                display: \"flex\"\n              }}\n            >\n              <div style={{ width: \"20%\" }}>\n                <span\n                  className=\"input-group-addon\"\n                  style={{\n                    border: \"1px solid lightgrey\"\n                  }}\n                >\n                  <i\n                    className=\"glyphicon glyphicon-user\"\n                    aria-hidden=\"true\"\n                  ></i>\n                </span>\n              </div>\n              <div style={{ width: \"80%\" }}>\n                <AvField\n                  style={{ fontSize: \"inherit\", height: \"30px\" }}\n                  name=\"email\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Username\"\n                  validate={{\n                    required: true,\n                    email: true\n                  }}\n                />\n              </div>\n            </div>\n\n            <div\n              className=\"form-group\"\n              style={{\n                fontSize: \"12px\",\n                justifyContent: \"center\",\n                display: \"flex\"\n              }}\n            >\n              <div style={{ width: \"20%\" }}>\n                <span\n                  className=\"input-group-addon\"\n                  style={{ border: \"1px solid lightgrey\" }}\n                >\n                  <i\n                    className=\"glyphicon glyphicon-lock\"\n                    aria-hidden=\"true\"\n                  ></i>\n                </span>\n              </div>\n              <div style={{ width: \"80%\" }}>\n                <AvField\n                  style={{ fontSize: \"inherit\", height: \"30px\" }}\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  className=\"form-control\"\n                  type=\"password\"\n                  validate={{\n                    required: {\n                      value: true,\n                      errorMessage: \"Please enter your password\"\n                    },\n                    pattern: {\n                      value: \"^[A-Za-z0-9]+$\",\n                      errorMessage:\n                        \"Your password must be composed only with letter and numbers\"\n                    },\n                    minLength: {\n                      value: 6,\n                      errorMessage:\n                        \"Your password must be between 6 and 16 characters\"\n                    },\n                    maxLength: {\n                      value: 50,\n                      errorMessage:\n                        \"Your password must be between 6 and 16 characters\"\n                    }\n                  }}\n                />\n              </div>\n            </div>\n            <div\n              style={{\n                width: \"100%\",\n                display: \"flex\",\n                justifyContent: \"center\"\n              }}\n            >\n              <StyledButton name=\"Login\" />\n            </div>\n          </AvForm>{\" \"}\n        </div>\n      </StylePage>\n    );\n  }\n}\nexport default Login;\n","export const customFields = {\n  severity: \"customfield_10604\",\n  category: \"customfield_11101\",\n  platforms: \"customfield_11200\",\n  found_during: \"customfield_11300\",\n  rounds: \"customfield_11301\",\n  testers: \"customfield_11700\",\n  slides: \"customfield_10800\",\n  page_no: \"customfield_11820\"\n};\n","import { customFields } from \"./customFields\";\nvar fs = window.require(\"fs\");\nconst request = window.require(\"request\");\nconst token = localStorage.getItem(\"AuthorizationToken\");\nexport const getProjectComponents = async (id, callback) => {\n  await new Promise((resolve, reject) => {\n    const options = {\n      method: \"GET\",\n      url: `https://mitrmedia.atlassian.net/rest/api/3/project/${id}/components`,\n      headers: {\n        \"cache-control\": \"no-cache\",\n        authorization: token,\n        \"content-type\": \"application/json\"\n      },\n      json: true\n    };\n\n    request(options, function(error, response, body) {\n      if (error) throw new Error(error);\n      callback && callback(body);\n      return resolve(body);\n    });\n  });\n};\n\nexport const getProjectVersions = async (id, callback) => {\n  await new Promise((resolve, reject) => {\n    const options = {\n      method: \"GET\",\n      url: `https://mitrmedia.atlassian.net/rest/api/3/project/${id}/versions`,\n      headers: {\n        \"cache-control\": \"no-cache\",\n        authorization: token,\n        \"content-type\": \"application/json\"\n      },\n      json: true\n    };\n\n    request(options, function(error, response, body) {\n      if (error) throw new Error(error);\n      callback && callback(body);\n      return resolve(body);\n    });\n  });\n};\n\nexport const getProjectCustomFields = async (id, callback) => {\n  await new Promise((resolve, reject) => {\n    const options = {\n      method: \"GET\",\n      url: \"https://mitrmedia.atlassian.net/rest/api/3/issue/createmeta\",\n      qs: { projectKeys: id, expand: \"projects.issuetypes.fields\" },\n      headers: {\n        \"cache-control\": \"no-cache\",\n        authorization: token,\n        \"content-type\": \"application/json\"\n      },\n      json: true\n    };\n\n    request(options, function(error, response, body) {\n      if (error) throw new Error(error);\n      const retval =\n        body.projects &&\n        body.projects.length > 0 &&\n        body.projects[0].issuetypes &&\n        body.projects[0].issuetypes.length > 0 &&\n        body.projects[0].issuetypes[0].fields;\n      callback && callback(retval);\n      return resolve(body);\n    });\n  });\n};\n\nexport const createIssue = async (\n  projectDetails,\n  { summary, desc, severity, issueType, selectedSlide, pageNo = \"\" },\n  callback\n) => {\n  const {\n    key,\n    components,\n    phase,\n    round,\n    platforms,\n    foundDuring,\n    tester,\n    category = \"\"\n  } = projectDetails;\n  await new Promise((resolve, reject) => {\n    const params = {\n      fields: {\n        summary: summary,\n        issuetype: { name: issueType },\n        project: { key: key },\n        description: {\n          type: \"doc\",\n          version: 1,\n          content: [\n            {\n              type: \"paragraph\",\n              content: [\n                {\n                  text: desc,\n                  type: \"text\"\n                }\n              ]\n            }\n          ]\n        },\n        [customFields.severity]: { value: severity },\n        [customFields.rounds]: { value: round },\n\n        [customFields.platforms]: platforms.map(data => {\n          return {\n            value: data\n          };\n        }),\n        [customFields.found_during]: { value: foundDuring },\n        [customFields.testers]: { value: tester },\n        versions: [\n          {\n            name: phase\n          }\n        ],\n        components: components.map(data => {\n          return {\n            name: data\n          };\n        })\n      }\n    };\n    if (![\"None\", \"\"].includes(selectedSlide.toString())) {\n      params.fields[customFields.slides] = [{ value: selectedSlide }];\n    }\n    if (category !== \"\") {\n      params.fields[customFields.category] = { value: category };\n    }\n    if (pageNo !== \"\") {\n      params.fields[customFields.page_no] = pageNo;\n    }\n    const options = {\n      method: \"POST\",\n      url: \"https://mitrmedia.atlassian.net/rest/api/3/issue/\",\n      headers: {\n        \"cache-control\": \"no-cache\",\n        authorization: token,\n        \"content-type\": \"application/json\",\n        accept: \"application/json\"\n      },\n      body: params,\n      json: true\n    };\n\n    request(options, function(error, response, body) {\n      if (error) throw new Error(error);\n      callback && callback(body);\n      return resolve(body);\n    });\n  });\n};\n\nexport const addAttachment = async (id,imageBase64Data) => {\n  await new Promise((resolve, reject) => {\n    // const value = fs.createReadStream(\"./image.png\");\n\n    function dataURLtoFile(dataurl, filename) {\n                            var arr = dataurl.split(','),\n                                mime = arr[0].match(/:(.*?);/)[1],\n                                bstr = atob(arr[1]),\n                                n = bstr.length,\n                                u8arr = new Uint8Array(n);\n                            while(n--){\n                                u8arr[n] = bstr.charCodeAt(n);\n                            }\n                            return new File([u8arr], filename, {type:mime});\n                        }\n                        //Usage example:\n                        var file = dataURLtoFile(imageBase64Data,'test');\n\n\n\n\n\n\n    const options = {\n      method: \"POST\",\n      url: `https://mitrmedia.atlassian.net/rest/api/3/issue/${id}/attachments`,\n      headers: {\n        \"cache-control\": \"no-cache\",\n        \"x-atlassian-token\": \"no-check\",\n        authorization: token,\n        \"content-type\":\n          \"multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW\"\n      },\n      formData: {\n        file: {\n          value: file,\n          options: { filename: \"attachmentImage.png\", contentType: null }\n        }\n      }\n    };\n\n    request(options, function(error, response, body) {\n      if (error) throw new Error(error);\n      //    callback && callback(body);\n      return resolve(body);\n    });\n  });\n};\n","import React, { Component } from \"react\";\n\nimport StylePage, { StyledButton } from \"app/common/component/StylePage\";\nimport { AvForm } from \"availity-reactstrap-validation\";\nimport { Button } from \"reactstrap\";\nimport { Header } from \"app/common/component/Header\";\nconst fs = window.require(\"fs\");\nconst shell = window.require(\"electron\").shell;\nclass ReportFeedbackContainer extends Component {\n  componentDidMount() {\n\n  }\n  render() {\n    const { issueDetails } = this.props.history;\n    return (\n      <StylePage Header={<Header h2={\"Thank you \"} outerBoxPadding={\"0px\"} />}>\n        <AvForm>\n          <div style={{ fontSize: \"15px\" }}>\n            <p style={{ fontWeight: \"bold\" }}>\n              The issue has been logged in jira\n            </p>\n            <p>\n              if you wish to change something in ticket, please click below\n              link.\n            </p>\n            <p>\n              {issueDetails && (\n                <Button\n                  style={{\n                    fontSize: \"15px\",\n                    background: \"none\",\n                    border: \"0\",\n                    color: \"blue\",\n                    textDecoration: \"underline\"\n                  }}\n                  onClick={() =>\n                    shell.openExternal(\n                      \"https://mitrmedia.atlassian.net/browse/\" +\n                        issueDetails.key\n                    )\n                  }\n                >\n                  {issueDetails.key}\n                </Button>\n              )}\n            </p>\n          </div>\n          <StyledButton\n            onClick={() => this.props.onBackPage()}\n            name={\"Report Another Issue\"}\n          />\n        </AvForm>\n      </StylePage>\n    );\n  }\n}\n\nexport default ReportFeedbackContainer;\n","import React, { Component } from \"react\";\nimport { Input } from \"reactstrap\";\nimport \"./screenShotStyles.css\";\nimport StylePage, { StyledButton } from \"app/common/component/StylePage\";\nimport { AvForm } from \"availity-reactstrap-validation\";\nimport { Header } from \"app/common/component/Header\";\nimport \"../../App.css\";\nimport { createIssue, addAttachment } from \"../../utils/issueUtils\";\nimport ReportFeedbackContainer from \"../reportfeedback/ReportFeedbackContainer\";\n\nconst fs = window.require(\"fs\");\nclass CreateIssueContainer extends Component {\n  state = {\n    severity: \"\",\n    issueType: \"\",\n    summary: \"\",\n    desc: \"\",\n    isSubmit: false,\n    ticketID: \"\",\n    isShowScreenShotPage: false,\n    pageNo: \"\",\n    selectedSlide: \"\",\n    isShowFeedBackPage: false\n  };\n\n  onSubmitIssue = img => {\n    const {\n      severity,\n      issueType,\n      summary,\n      desc,\n      imgSrc,\n      selectedSlide,\n      pageNo\n    } = this.state;\n    if (img === imgSrc) this.setState({ imgSrc: imgSrc });\n    this.setState({ isSubmit: true });\n\n    if (\n      severity !== \"\" &&\n      issueType !== \"\" &&\n      summary !== \"\" &&\n      desc !== \"\" &&\n      (selectedSlide !== \"\" || pageNo !== \"\")\n    ) {\n      const path = \"./image.png\";\n      createIssue(\n        this.props.history.projectDetails,\n        { summary, desc, severity, issueType, selectedSlide, pageNo },\n        issueDetails => {\n          this.props.imageBase64Data!==\"\" &&\n            addAttachment(issueDetails.key, this.props.imageBase64Data);\n          Object.assign(this.props.history, {\n            issueDetails: issueDetails\n          });\n\n          this.props.setScreenShotImage(\"\");\n          this.setState({\n            isShowFeedBackPage: true\n          });\n        }\n      );\n    }\n  };\n\n  showSummaryPage = () => {\n    const {\n      severityArray,\n      slideNos,\n      page_no\n    } = this.props.history.projectDetails;\n    const {\n      severity,\n      issueType,\n      summary,\n      desc,\n      isSubmit,\n      pageNo,\n      selectedSlide\n    } = this.state;\n\n    return (\n      <StylePage Header={<Header h2={\"Creating Issue\"} />}>\n        <AvForm>\n          <div style={{ fontSize: \"10px\" }}>\n            {summary === \"\" && isSubmit && (\n              <span className=\"issue-alert\">Please enter summary</span>\n            )}\n            <Input\n              type=\"text\"\n              name=\"text\"\n              id=\"exampleText\"\n              placeholder=\"Summary\"\n              onChange={e =>\n                this.setState({\n                  summary: e.target.value\n                })\n              }\n            />\n            {desc === \"\" && isSubmit && (\n              <span className=\"issue-alert\">Please select description</span>\n            )}\n            <Input\n              type=\"textarea\"\n              placeholder=\"Description\"\n              name=\"text\"\n              id=\"exampleTextAria\"\n              onChange={e =>\n                this.setState({\n                  desc: e.target.value\n                })\n              }\n            />\n\n            {page_no && (\n              <React.Fragment>\n                <span className=\"issue-alert\">\n                  {pageNo === \"\" && isSubmit && \"Please enter page number\"}\n                </span>\n\n                <Input\n                  type=\"textarea\"\n                  placeholder=\"Page no.\"\n                  name=\"text\"\n                  id=\"exampleText\"\n                  onChange={e =>\n                    this.setState({\n                      pageNo: e.target.value\n                    })\n                  }\n                />\n              </React.Fragment>\n            )}\n            <div className=\"optionWrapper\">\n              <div style={{ width: \"100%\", marginRight: \"5px\" }}>\n                {severity === \"\" && isSubmit && (\n                  <span className=\"issue-alert\">Please select description</span>\n                )}\n                <select\n                  className=\"drop-report-issue\"\n                  onChange={e => this.setState({ severity: e.target.value })}\n                >\n                  <option value=\"\" disabled selected hidden>\n                    Severity\n                  </option>\n                  {severityArray &&\n                    severityArray.map((val, index) => (\n                      <option id={index} key={index}>\n                        {val}\n                      </option>\n                    ))}\n                </select>\n              </div>\n              {!page_no && (\n                <div style={{ width: \"100%\", marginRight: \"5px\" }}>\n                  {selectedSlide === \"\" && isSubmit && (\n                    <span className=\"issue-alert\">Please select Slide Nos</span>\n                  )}\n                  <select\n                    className=\"drop-report-issue\"\n                    onChange={e =>\n                      this.setState({ selectedSlide: e.target.value })\n                    }\n                  >\n                    <option value=\"\" disabled selected hidden>\n                      Slide Nos.\n                    </option>\n                    <option id={-1} key={-1} value=\"None\">\n                      {\"None\"}\n                    </option>\n                    {slideNos &&\n                      slideNos.map((val, index) => (\n                        <option id={index} key={index}>\n                          {val}\n                        </option>\n                      ))}\n                  </select>\n                </div>\n              )}\n\n              <div style={{ width: \"100%\", marginLeft: \"5px\" }}>\n                {issueType === \"\" && isSubmit && (\n                  <span className=\"issue-alert\">Please select description</span>\n                )}\n                <select\n                  className=\"drop-report-issue\"\n                  onChange={e => this.setState({ issueType: e.target.value })}\n                >\n                  <option value=\"\" disabled selected hidden>\n                    Issue Type\n                  </option>\n                  {[\"Bug\", \"Improvement\"].map((val, index) => (\n                    <option key={index} id={index}>\n                      {val}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n          {this.props.imageBase64Data !== \"\" && (\n            <div\n              style={{\n                backgroundColor: \"#f5f5f5\",\n                border: \"1px solid transparent\",\n                fontWeight: \"normal\",\n                width: \"100%\",\n                marginBottom: \"5px\",\n                textAlign: \"left\",\n                color: \"grey\"\n              }}\n            >\n              <span> {\"image.png\"}</span>\n              <button\n                style={{\n                  float: \"right\",\n                  border: \"0\",\n                  background: \"border-box\"\n                }}\n                onClick={() => {\n                  const path = \"./image.png\";\n                  fs.existsSync(path)&&fs.unlink(path, err => {\n                    if (err) {\n                      return;\n                    }\n                  });\n\n                  this.props.setScreenShotImage(\"\");\n                }}\n              >\n                <i\n                  style={{ color: \"palevioletred\" }}\n                  class=\"glyphicon glyphicon-trash\"\n                ></i>\n              </button>\n            </div>\n          )}\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"30px\"\n            }}\n          >\n            <StyledButton\n              style={{ marginRight: \"20px\" }}\n              name=\" Take Snapshot\"\n              id=\"submit\"\n              type=\"submit\"\n              onClick={() => {\n                this.props.toggleScreenShotPage();\n              }}\n            />\n            <StyledButton\n              style={{ marginLeft: \"20px\" }}\n              name=\"Create Issue\"\n              id=\"submit\"\n              type=\"submit\"\n              onClick={this.onSubmitIssue}\n            />\n          </div>\n        </AvForm>\n        <div\n          style={{\n            textDecoration: \"underline\",\n            color: \"blue\",\n            fontSize: \"12px\",\n            marginTop: \"23px\",\n            float: \"left\",\n            cursor: \"pointer\"\n          }}\n          onClick={() => {\n            this.props.onPageBack();\n          }}\n        >\n          {\" \"}\n          {\"  <- Back to Project Info\"}\n        </div>\n      </StylePage>\n    );\n  };\n\n  render() {\n    const { isShowFeedBackPage } = this.state;\n    console.log(\"sangharsh\");\n    if (isShowFeedBackPage) {\n      return (\n        <ReportFeedbackContainer\n          history={this.props.history}\n          onBackPage={() => {\n            this.setState({\n              isShowFeedBackPage: false\n            });\n          }}\n        />\n      );\n    } else {\n      return this.showSummaryPage();\n    }\n  }\n}\n\nexport default CreateIssueContainer;\n","const screenshot = window.require(\"screenshot-desktop\");\n\nconst { remote } = window.require(\"electron\");\n\nexport const getScreenShotImage = callback => {\n  const activeWindow = remote.BrowserWindow.getFocusedWindow();\n  activeWindow.minimize();\n  setTimeout(() => {\n    screenshot\n      .all()\n      .then(imgArr => {\n        let imgBuffer;\n\n        if (imgArr.length === 1) {\n          imgBuffer = imgArr[0];\n          let image = new Image();\n          image.src = `data:image/png;base64, ${imgBuffer.toString(\"base64\")}`;\n\n          image.onload = function() {\n            activeWindow.restore();\n            const imageWid = image.width + 200;\n            console.log(image.width + image.width / 5, \"sangharsh\");\n            callback(image.src, \"\", {\n              width: imageWid,\n              height: image.height\n            });\n          };\n        } else {\n          imgBuffer = imgArr[0];\n          let imgBuffer2 = imgArr[1];\n          let image1 = new Image();\n          let image = new Image();\n          image.src = `data:image/png;base64, ${imgBuffer.toString(\"base64\")}`;\n          image1.src = `data:image/png;base64, ${imgBuffer2.toString(\n            \"base64\"\n          )}`;\n          image.onload = function() {\n            callback(image.src, image1.src, {\n              width: image.width + 400,\n              height: image.height\n            });\n          };\n        }\n      })\n      .catch(err => {\n        console.error(err.message);\n      });\n  });\n};\n","import React from \"react\";\nimport {\n  Stage,\n  Shape,\n  Bitmap,\n  Rectangle,\n  Ticker,\n  Text,\n  Container\n} from \"@createjs/easeljs\";\nimport { StyledButton } from \"app/common/component/StylePage\";\nimport { getScreenShotImage } from \"../../../utils/screenshotUtils\";\nconst ColorPalet = [\"white\", \"red\", \"green\", \"blue\", \"yellow\"];\nvar fs = window.require(\"fs\");\nvar request = window.require(\"request\");\nconst canvasSize = { Width: 800, height: 500 };\n\nconst scaleValue = 0.5;\nclass ScreenShotEditor extends React.Component {\n  state = {\n    bounds: {\n      ...canvasSize\n    },\n    cropBounds: {\n      width: 0,\n      height: 0,\n      x: 0,\n      y: 0\n    },\n    textPosition: {\n      x: 0,\n      y: 0\n    },\n    text: \"\",\n    windowSize: {\n      width: 0,\n      height: 0\n    },\n    zoom: 0,\n    color: \"red\"\n  };\n  initialLoad() {\n    console.log(window.outerWidth, \"  window.resizeTo\", window.outerHeight);\n    getScreenShotImage((imageSrc1, imageSrc2 = \"\", windowSize) => {\n      window.resizeTo(windowSize.width, windowSize.height);\n      const tempCanvasSize = {\n        width: windowSize.width,\n        height: windowSize.height\n      };\n      this.setState({\n        imageSrc: imageSrc1,\n        imgSrc2: imageSrc2,\n        windowSize: windowSize,\n        bounds: { ...tempCanvasSize }\n      });\n\n      this.init();\n      window.addEventListener(\"scroll\", param => {\n        if (window.document.body.getBoundingClientRect().top < 0) {\n          const { zoom } = this.state;\n          this.setState({\n            zoom: zoom + 0.2\n          });\n        } else {\n          const { zoom } = this.state;\n          this.setState({\n            zoom: zoom - 0.2\n          });\n        }\n      });\n      Ticker.addEventListener(\"tick\", e => {\n        this.stage.update();\n      });\n    });\n  }\n  componentDidMount() {\n    this.initialLoad();\n  }\n\n  textEditor = ev => {\n    this.stage.addEventListener(\"pressup\", this.enableTextEditor);\n  };\n\n  cropImageFunction = () => {\n    this.stage.alpha = 0.3;\n    this.stage.addEventListener(\"mousedown\", this.enableCropSection);\n\n    this.stage.addEventListener(\"pressmove\", this.dragCropArea);\n    this.stage.addEventListener(\"pressup\", this.setCropImage);\n  };\n\n  enableTextEditor = e => {\n    this.setState({ textPosition: { x: e.stageX, y: e.stageY } });\n    if (this.title) {\n      this.writeTextOnCanvas();\n    } else {\n      this.createTextField();\n    }\n  };\n\n  createTextField = () => {\n    this.title = document.createElement(\"input\");\n    this.title.style.position = \"absolute\";\n    this.title.type = \"text\";\n    this.title.addEventListener(\"keyup\", event => {\n      if (event.keyCode === 13) this.writeTextOnCanvas();\n      this.setState({ text: event.target.value });\n    });\n    const {\n      textPosition: { x, y }\n    } = this.state;\n\n    this.title.style.top = `${y}px`;\n    this.title.style.left = `${x}px`;\n    this.title.style.color = this.state.color;\n    this.title.style.background = `transparent`;\n    this.container.current.style.position = \"relative\";\n    this.container.current.append(this.title);\n\n    this.title.focus();\n  };\n  writeTextOnCanvas = () => {\n    const {\n      textPosition: { x, y },\n      text\n    } = this.state;\n\n    const textMessg = new Text(text, \"20px Arial\", this.state.color);\n    textMessg.x = x;\n    textMessg.y = y;\n    this.stage.addChild(textMessg);\n    this.container.current.style.position = \"static\";\n    this.container.current.removeChild(this.title);\n    this.setState({ text: \"\" });\n    this.title = null;\n    textMessg.addEventListener(\"pressmove\", e => {\n      const { stageX, stageY } = e;\n      textMessg.x = stageX;\n      textMessg.y = stageY;\n    });\n    this.stage.removeEventListener(\"pressup\", this.enableTextEditor);\n  };\n\n  setCropImage = e => {\n    this.stage.alpha = 1;\n    setTimeout(() => {\n      const {\n        cropBounds,\n        cropBounds: { width, height, x, y }\n      } = this.state;\n      const tempWindowSize = {\n        width: cropBounds.width + 20,\n        height: cropBounds.height + 20\n      };\n\n      this.cropImage = new Bitmap(this.stage.toDataURL());\n\n      this.cropImage.sourceRect = new Rectangle(x, y, width, height);\n\n      this.stage.removeAllChildren();\n      this.setState({ bounds: this.bitmap.getBounds() });\n      this.stage.setBounds(0, 0, width, height);\n      this.stage.addChild(this.cropImage); //remove Event listenerssetCropImage\n\n      this.setState({\n        windowSize: tempWindowSize\n      });\n    }, 200);\n    this.stage.removeEventListener(\"pressup\", this.setCropImage);\n    this.stage.removeEventListener(\"mousedown\", this.enableCropSection);\n    this.stage.removeEventListener(\"pressmove\", this.dragCropArea);\n  };\n\n  dragCropArea = e => {\n    const { stageX, stageY } = e;\n    const width = stageX - this.newRect.x;\n    const height = stageY - this.newRect.y;\n    this.newRect.graphics\n      .clear()\n      .beginStroke(\"black\")\n      .drawRect(0, 0, width, height);\n    this.setState({\n      cropBounds: { ...this.state.cropBounds, width: width, height: height }\n    });\n  };\n\n  enableCropSection = e => {\n    console.log(e, e.stageX, e.stageY);\n    this.newRect && this.stage.removeChild(this.newRect);\n    this.newRect = new Shape();\n    this.newRect.graphics.beginStroke(\"black\").drawRect(0, 0, 1, 1);\n    const { stageX, stageY } = e;\n    this.newRect.x = stageX;\n    this.newRect.y = stageY;\n    this.stage.addChild(this.newRect);\n    this.setState({\n      cropBounds: { ...this.state.cropBounds, x: stageX, y: stageY }\n    });\n  };\n\n  drawRectangle = () => {\n    this.stage.addEventListener(\"mousedown\", this.enableRectangle);\n\n    this.stage.addEventListener(\"pressmove\", this.dragRectangle);\n    this.stage.addEventListener(\"pressup\", this.removeAllListeners);\n  };\n  enableRectangle = e => {\n    this.drawRect = new Shape();\n    this.drawRect.graphics.beginStroke(this.state.color).drawRect(0, 0, 1, 1);\n    const { stageX, stageY } = e;\n    this.drawRect.x = stageX;\n    this.drawRect.y = stageY;\n    this.stage.addChild(this.drawRect);\n  };\n  dragRectangle = e => {\n    // console.log(e);\n    const { stageX, stageY } = e;\n    const width = stageX - this.drawRect.x;\n    const height = stageY - this.drawRect.y;\n    this.drawRect.graphics\n      .clear()\n      .setStrokeStyle(5)\n      .beginStroke(this.state.color)\n      .drawRect(0, 0, width, height);\n  };\n\n  removeAllListeners = () => {\n    this.stage.removeEventListener(\"mousedown\", this.enableRectangle);\n    this.stage.removeEventListener(\"pressmove\", this.dragRectangle);\n    this.stage.removeEventListener(\"pressup\", this.removeAllListeners);\n  };\n\n  init = () => {\n    window.aa = this;\n    const { imageSrc, imgSrc2, windowSize } = this.state;\n\n    this.stage = new Stage(\"canvas\");\n    window.Bitmap = Bitmap;\n    this.bitmap = new Bitmap(imageSrc);\n    this.bitmap.scaleX = imgSrc2 === \"\" ? scaleValue + 0.2 : scaleValue;\n    this.bitmap.scaleY = imgSrc2 === \"\" ? scaleValue + 0.2 : scaleValue;\n    this.imageContainer1 = new Container();\n    this.imageContainer1.addChild(this.bitmap);\n    this.imageContainer2 = new Container();\n    if (imgSrc2 !== \"\") {\n      this.bitmap2 = new Bitmap(imgSrc2);\n      this.bitmap2.scaleX = scaleValue;\n      this.bitmap2.scaleY = scaleValue + 0.2;\n      this.bitmap.scaleY += 0.2;\n      this.imageContainer2.addChild(this.bitmap2);\n    }\n\n    this.stage.addChild(this.imageContainer1, this.imageContainer2);\n\n    this.imageContainer2.x = this.bitmap.getBounds().width * scaleValue + 20;\n    this.bitmap = new Bitmap(this.stage.toDataURL());\n\n    this.stage.addChild(this.bitmap);\n    if (imgSrc2 !== \"\") {\n      // this.stage.setBounds(0,0,windowSize.width,windowSize.height)\n    }\n\n    this.bitmap.getBounds() &&\n      this.setState({ bounds: this.bitmap.getBounds() });\n  };\n\n  container = React.createRef();\n\n  // download(uri, filename, callback) {\n  //   request.head(uri, function(err, res, body) {\n  //     request(uri)\n  //       .pipe(fs.createWriteStream(filename))\n  //       .on(\"close\", callback);\n  //   });\n  // }\n  displayColorPalet() {\n    return ColorPalet.map(value => {\n      return (\n        <button\n          onClick={() => this.setState({ color: value })}\n          style={{\n            background: value,\n            width: \"15px\",\n            height: \"15px\",\n            border: \"1px solid black\",\n            margin: \"3px\"\n          }}\n        ></button>\n      );\n    });\n  }\n  render() {\n    const {\n      windowSize: { height, width },\n      imgSrc2\n    } = this.state;\n    if (this.props.isShowScreenShotPage) {\n      window.resizeTo(1400, 1200);\n    }\n\n    return (\n      <div\n        style={{\n          width: width,\n          height: height,\n          position: \"absolute\",\n          top: \"0\",\n          left: \"0\",\n          background: \"white\"\n        }}\n      >\n        <div style={{ width: \"100%\", height: \"10%\" }}>\n          {this.displayColorPalet()}\n          <button\n            style={{ margin: \"5px\", color: \"black\" }}\n            onClick={this.cropImageFunction}\n          >\n            <i className=\"glyphicon glyphicon-scissors\" aria-hidden=\"true\"></i>\n          </button>{\" \"}\n          <button\n            style={{ margin: \"5px\", color: \"black\" }}\n            onClick={this.textEditor}\n          >\n            <i className=\"glyphicon glyphicon-text-size\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            style={{ margin: \"5px\", color: \"black\" }}\n            onClick={this.drawRectangle}\n          >\n            <i className=\"glyphicon glyphicon-unchecked\" aria-hidden=\"true\"></i>\n          </button>\n          <StyledButton\n            onClick={() => {\n\n              const path = \"./image.png\";\n              //\n              fs.existsSync(path) &&\n                fs.unlink(path, err => {\n                  if (err) {\n                    console.error(err);\n                    return;\n                  }\n                });\n\n\n\n\n              var base64Data = this.stage\n                .toDataURL()\n                // .replace(/^data:image\\/png;base64,/, \"\");\n\n              // //\n              window\n                .require(\"fs\")\n                .writeFile(\"./image.png\", base64Data, \"base64\", function(err) {\n                  console.log(err);\n                });\n\n                // const  fileInstance=new FileReader();\n                // fileInstance.readAsDataURL(base64Data);\n\n\n              // setTimeout(() => {\n              //   const value = fs.createReadStream(\"./image.png\");\n              //   console.log(value, \"valuevaluevaluevalue\");\n              // }, 3000);\n\n              this.props.setScreenShotImage(base64Data);\n              //added original size of window\n              window.resizeTo(375, 452);\n              setTimeout(() => {\n                this.props.toggleScreenShotPage();\n              });\n            }}\n            style={{ marginRight: \"10px\" }}\n            name=\"Done\"\n          />\n          <StyledButton\n            onClick={() => {\n              const path = \"./image.png\";\n\n              fs.existsSync(path) &&\n                fs.unlink(path, err => {\n                  if (err) {\n                    console.error(err);\n                    return;\n                  }\n                });\n\n              this.props.setScreenShotImage(\"\");\n              window.resizeTo(375, 452);\n              setTimeout(() => {\n                this.props.toggleScreenShotPage();\n              });\n            }}\n            style={{ marginLeft: \"10px\" }}\n            name=\"Cancel\"\n          />\n          <StyledButton\n            style={{ marginLeft: \"20px\" }}\n            onClick={() => {\n              setTimeout(() => {\n                this.stage.removeAllChildren();\n                this.initialLoad();\n              });\n            }}\n            name=\"Retake Snapshot\"\n          />\n        </div>\n        <div\n          style={{\n            height: \"90%\",\n            width: \"100%\",\n            color: \"black\",\n            display: \"flex\"\n          }}\n          className=\"App\"\n        >\n          <div\n            ref={this.container}\n            style={{\n              width: \"90%\",\n              height: \"100%\",\n              margin: \"20px\"\n            }}\n          >\n            <canvas id=\"canvas\" width={width} height={height} /> \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ScreenShotEditor;\n","import React, { Component } from \"react\";\nimport \"../../App.css\";\nimport {\n  getProjectComponents,\n  getProjectVersions,\n  getProjectCustomFields\n} from \"../../utils/issueUtils\";\nimport _ from \"lodash\";\nimport StylePage, { StyledButton } from \"app/common/component/StylePage\";\nimport { AvForm } from \"availity-reactstrap-validation\";\nimport { customFields } from \"../../utils/customFields\";\nimport Select from \"react-select\";\nimport ScreenShotEditor from \"../createissue/component/ScreenShotEditor\";\nimport CreateIssueContainer from \"../createissue/CreateIssueContainer\";\n\nexport default class ReportIssue extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: this.props.history.projectList.projects,\n      projectName: \"\",\n      components: [],\n      componentsArr: [],\n      projectPhase: \"\",\n      projectRound: \"\",\n      roundsArr: [],\n      platforms: [],\n      platformsArr: [],\n      foundDuring: \"\",\n      foundDuringArr: [],\n      projectTester: \"\",\n      testerArr: [],\n      category: \"\",\n      categoryArr: [],\n      phasesArr: [],\n      isSubmit: false,\n      nextPage: false,\n      isAttachment: false,\n      isShowScreenShotPage: false,\n      imageBase64Data: \"\"\n    };\n  }\n\n  setScreenShotImage(imageBase64) {\n    this.setState({\n      imageBase64Data: imageBase64\n    });\n  }\n  resetOptions = projectName => {\n    this.setState({\n      projectPhase: \"\",\n      projectRound: \"\",\n      platforms: [],\n      foundDuring: \"\",\n      projectTester: \"\",\n      category: \"\",\n      isSubmit: false,\n      nextPage: false,\n      isAttachment: false\n    });\n\n    _.find(this.state.projects, pt => {\n      if (pt.name === projectName) {\n        getProjectComponents(pt.id, projectComponent => {\n          projectComponent &&\n            projectComponent.length > 0 &&\n            this.setState({\n              projectName: pt.key,\n              components: [],\n              componentsArr: projectComponent.map(val => val.name)\n            });\n        });\n        getProjectVersions(pt.id, versionsArr => {\n          versionsArr &&\n            versionsArr.length > 0 &&\n            this.setState({\n              phasesArr: versionsArr.map(val => val.name)\n            });\n        });\n        getProjectCustomFields(pt.key, fields => {\n          this.severity = this.getDropDownValues(fields[customFields.severity]);\n          this.slideNos = this.getDropDownValues(fields[customFields.slides]);\n          if (fields[customFields.page_no]) {\n            this.page_no = true;\n          } else {\n            this.page_no = false;\n          }\n          this.setState({\n            categoryArr: this.getDropDownValues(fields[customFields.category]),\n            roundsArr: this.getDropDownValues(fields[customFields.rounds]),\n            foundDuringArr: this.getDropDownValues(\n              fields[customFields.found_during]\n            ),\n            testerArr: this.getDropDownValues(fields[customFields.testers]),\n            platformsArr: this.getDropDownValues(fields[customFields.platforms])\n          });\n        });\n      }\n    });\n  };\n\n  getDropDownValues = field =>\n    field && field.allowedValues && field.allowedValues.map(val => val.value);\n\n  handleProjectChange = event => {\n    this.resetOptions(event.target.value);\n  };\n\n  handleSubmit = e => {\n    const {\n      projectName,\n      components,\n      projectPhase,\n      projectRound,\n      platforms,\n      foundDuring,\n      projectTester,\n      category\n    } = this.state;\n    e.preventDefault();\n    this.setState({\n      isSubmit: true\n    });\n    if (\n      projectName !== \"\" &&\n      components !== [] &&\n      projectPhase !== \"\" &&\n      projectRound !== \"\" &&\n      platforms !== [] &&\n      foundDuring !== \"\" &&\n      projectTester !== \"\"\n    ) {\n      Object.assign(this.props.history, {\n        projectDetails: {\n          key: projectName,\n          components: components,\n          phase: projectPhase,\n          round: projectRound,\n          platforms: platforms,\n          foundDuring: foundDuring,\n          tester: projectTester,\n          category: category,\n          severityArray: this.severity,\n          slideNos: this.slideNos,\n          page_no: this.page_no\n        }\n      });\n      this.setState({\n        nextPage: true\n      });\n    }\n  };\n\n  IndicatorSeparator = ({ innerProps }) => {\n    const indicatorSeparatorStyle = {\n      alignSelf: \"stretch\",\n      backgroundColor: \"#5243AA\",\n      marginBottom: 8,\n      marginTop: 8,\n      width: 1\n    };\n    return <span style={indicatorSeparatorStyle} {...innerProps} />;\n  };\n\n  renderMultiSelectDropDown = (options, placeholder, stateVar) => {\n    const formattedOptions =\n      options &&\n      options !== [] &&\n      options.map(option => {\n        return { value: option, label: option };\n      });\n    return (\n      <Select\n        closeMenuOnSelect={false}\n        components={this.IndicatorSeparator}\n        isMulti\n        value={\n          this.state[stateVar] &&\n          this.state[stateVar] !== [] &&\n          this.state[stateVar].map(option => {\n            return { value: option, label: option };\n          })\n        }\n        options={formattedOptions}\n        placeholder={placeholder}\n        onChange={(e, fn) => {\n          this.setState({\n            [stateVar]: e && e !== [] && e.map(val => val.value)\n          });\n        }}\n        // {...(this.state.reset ? { value: [] } : {})}\n      />\n    );\n  };\n\n  onReset = () => {\n    this.setState({\n      projectName: \"\",\n      components: [],\n      projectPhase: \"\",\n      projectRound: \"\",\n      platforms: [],\n      foundDuring: \"\",\n      projectTester: \"\",\n      category: \"\",\n      categoryArr: [],\n      phasesArr: [],\n      isSubmit: false,\n      nextPage: false,\n      isAttachment: false,\n      componentsArr: [],\n      roundsArr: [],\n      foundDuringArr: [],\n      testerArr: [],\n      platformsArr: []\n    });\n  };\n\n  renderReportPageIntro = () => {\n    const {\n      projects,\n      projectName,\n      components,\n      projectPhase,\n      projectRound,\n      platforms,\n      foundDuring,\n      projectTester,\n      category,\n      isSubmit,\n      categoryArr,\n      phasesArr,\n      componentsArr,\n      roundsArr,\n      foundDuringArr,\n      testerArr,\n      platformsArr\n    } = this.state;\n    return (\n      <div className=\"projectFormWrapper\">\n        {projectName === \"\" && isSubmit && (\n          <span className=\"issue-alert\">Please select project</span>\n        )}\n        <select\n          onChange={this.handleProjectChange}\n          className=\"drop-report-issue\"\n        >\n          {projectName === \"\" && (\n            <option value=\"\" disabled selected hidden>\n              Select Project\n            </option>\n          )}\n          {projects && projects.map(val => <option>{val.name}</option>)}\n        </select>\n        {components && components.length === 0 && isSubmit && (\n          <span className=\"issue-alert\">Please select component/s</span>\n        )}\n        {this.renderMultiSelectDropDown(\n          componentsArr,\n          \"Select Component/s\",\n          \"components\"\n        )}\n        <div style={{ display: \"flex\", width: \"100%\" }}>\n          <div style={{ width: \"50%\", marginRight: \"5px\" }}>\n            {projectRound === \"\" && isSubmit && (\n              <span className=\"issue-alert\">Please select round</span>\n            )}\n            <select\n              className=\"drop-report-issue\"\n              onChange={e => this.setState({ projectRound: e.target.value })}\n            >\n              {projectRound === \"\" && (\n                <option value=\"\" disabled selected hidden>\n                  Round\n                </option>\n              )}\n              {roundsArr &&\n                roundsArr !== [] &&\n                roundsArr.map(val => <option>{val}</option>)}\n            </select>\n          </div>\n\n          <div style={{ width: \"50%\", marginLeft: \"5px\" }}>\n            {projectPhase === \"\" && isSubmit && (\n              <span className=\"issue-alert\">Please select phase</span>\n            )}\n            <select\n              className=\"drop-report-issue\"\n              onChange={e => this.setState({ projectPhase: e.target.value })}\n            >\n              {projectPhase === \"\" && (\n                <option value=\"\" disabled selected hidden>\n                  Phase\n                </option>\n              )}\n              {phasesArr &&\n                phasesArr !== [] &&\n                phasesArr.map(val => <option>{val}</option>)}\n            </select>\n          </div>\n        </div>\n\n        <span className=\"issue-alert\">\n          {category === \"\" && isSubmit && \"Please select category\"}\n        </span>\n        <select\n          className=\"drop-report-issue\"\n          onChange={e => this.setState({ category: e.target.value })}\n        >\n          {category === \"\" && (\n            <option value=\"\" disabled selected hidden>\n              Category\n            </option>\n          )}\n          {categoryArr &&\n            categoryArr !== [] &&\n            categoryArr.map(val => <option>{val}</option>)}\n        </select>\n\n        {platforms && platforms.length === 0 && isSubmit && (\n          <span className=\"issue-alert\">Please select platform/s</span>\n        )}\n        {this.renderMultiSelectDropDown(\n          platformsArr,\n          \"Select Platform/s\",\n          \"platforms\"\n        )}\n\n        <span className=\"issue-alert\">\n          {foundDuring === \"\" && isSubmit && \"Found During field is empty!\"}\n        </span>\n        <select\n          className=\"drop-report-issue\"\n          onChange={e => this.setState({ foundDuring: e.target.value })}\n        >\n          {foundDuring === \"\" && (\n            <option value=\"\" disabled selected hidden>\n              Found During\n            </option>\n          )}\n          {foundDuringArr &&\n            foundDuringArr !== [] &&\n            foundDuringArr.map(val => <option>{val}</option>)}\n        </select>\n\n        <span className=\"issue-alert\">\n          {projectTester === \"\" && isSubmit && \"Please select tester\"}\n        </span>\n        <select\n          className=\"drop-report-issue\"\n          onChange={e => this.setState({ projectTester: e.target.value })}\n        >\n          {projectTester === \"\" && (\n            <option value=\"\" disabled selected hidden>\n              Tester Name\n            </option>\n          )}\n          {testerArr &&\n            testerArr !== [] &&\n            testerArr.map(val => <option>{val}</option>)}\n        </select>\n        <div\n          style={{\n            textDecoration: \"underline\",\n            color: \"blue\",\n            fontSize: \"12px\",\n            marginTop: \"23px\",\n            float: \"left\",\n            cursor: \"pointer\"\n          }}\n          onClick={this.onReset}\n        >\n          Reset\n        </div>\n        <StyledButton\n          onClick={this.handleSubmit}\n          name=\"Set Environment\"\n          style={{ margin: \"10px 0 0 0\" }}\n        />\n      </div>\n    );\n  };\n  severity;\n  slideNos = [];\n  page_no = false;\n  toggleScreenShotPage() {\n    const { isShowScreenShotPage } = this.state;\n\n    this.setState({\n      isShowScreenShotPage: !isShowScreenShotPage\n    });\n  }\n\n  render() {\n    const {\n      isAttachment,\n      isShowScreenShotPage,\n      imageBase64Data,\n      nextPage\n    } = this.state;\n    console.log(imageBase64Data, \"imageBase64Data\");\n    if (!isShowScreenShotPage) {\n      window.resizeTo(385, 452);\n    }\n    return (\n      <React.Fragment>\n        {isShowScreenShotPage && (\n          <ScreenShotEditor\n            toggleScreenShotPage={() => {\n              this.toggleScreenShotPage();\n            }}\n            setScreenShotImage={image => {\n              this.setScreenShotImage(image);\n            }}\n            isShowScreenShotPage={isShowScreenShotPage}\n          />\n        )}\n        <div\n          style={{\n            display: isShowScreenShotPage ? \"none\" : \"block\"\n          }}\n        >\n          {this.state.nextPage && (\n            <CreateIssueContainer\n              isAttachment={isAttachment}\n              imageBase64Data={imageBase64Data}\n              setIsAttachment={val => {\n                this.setState({\n                  isAttachment: val\n                });\n              }}\n              history={this.props.history}\n              onPageBack={() => {\n                this.setState({ nextPage: false });\n              }}\n              setScreenShotImage={image => this.setScreenShotImage(image)}\n              toggleScreenShotPage={() => {\n                this.toggleScreenShotPage();\n              }}\n            />\n          )}\n          <div style={{ display: nextPage ? \"none\" : \"block\" }}>\n            <StylePage subHeading=\"Project Selection\" outerBoxPadding={\"0px\"}>\n              <AvForm>{this.renderReportPageIntro()}</AvForm>\n            </StylePage>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Login from \"./features/login/LoginContainer\";\nimport CreateIssueContainer from \"./features/createissue/CreateIssueContainer\";\nimport ReportFeedbackContainer from \"./features/reportfeedback/ReportFeedbackContainer\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ScreenShotEditor from \"./features/createissue/component/ScreenShotEditor\";\n\nimport ReportIssue from \"./features/reportissue/ReportIssueContainer\";\nconst fs = window.require(\"fs\");\n\nclass App extends React.Component {\n  componentWillUnmount() {\n    const path = \"./image.png\";\n    fs.existsSync(path) &&\n      fs.unlink(path, err => {\n        if (err) {\n          console.error(err);\n          return;\n        }\n      });\n  }\n  render() {\n    return (\n      <Router>\n        <div className=\"App\" style={{ height: \"98%\" }}>\n          <header className=\"App-header\">\n            <Switch>\n              <Route exact path=\"/\" component={Login} />\n              <Route\n                exact\n                path=\"/ScreenShotEditor\"\n                component={ScreenShotEditor}\n              />\n              <Route\n                exact\n                path=\"/CreateIssue\"\n                component={CreateIssueContainer}\n              />\n              <Route exact path=\"/ReportIssue\" component={ReportIssue} />\n              <Route\n                exact\n                path=\"/ReportFeedback\"\n                component={ReportFeedbackContainer}\n              />\n            </Switch>\n          </header>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}